---
title: "Exposure to Asylum Seekers"
author: '[Jochem Tolsma](https://www.jochemtolsma.nl) - Radboud University, the Netherlands'
bibliography: references.bib
date: "Last compiled on `r format(Sys.time(), '%B, %Y')`"
output: 
  html_document:
    toc:  true
    toc_float: true
    number_sections: false
    code_folding: show
    code_download: yes
---

```{r, globalsettings, echo=FALSE, warning=FALSE}
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=100),tidy=TRUE, warning = FALSE, message = FALSE,comment = "#>", cache=TRUE)
options(width = 100)
rgl::setupKnitr()


colorize <- function(x, color) {
  if (knitr::is_latex_output()) {
    sprintf("\\textcolor{%s}{%s}", color, x)
  } else if (knitr::is_html_output()) {
    sprintf("<span style='color: %s;'>%s</span>", color, 
      x)
  } else x
}

```

```{r klippy, echo=FALSE, include=TRUE}
klippy::klippy(position = c('top', 'right'))
#klippy::klippy(color = 'darkred')
#klippy::klippy(tooltip_message = 'Click to copy', tooltip_success = 'Done')
```
```{css, echo=FALSE}
pre.test {
  max-height: 300px;
  overflow-y: auto;
  overflow-x: auto;
  margin: 0px;
}

pre.test2 {
  max-height: 300px;
  overflow-y: auto;
  overflow-x: auto;
  margin: 0px;
  background-color: white
}


h1, .h1, h2, .h2, h3, .h3 {
    margin-top: 24px;
}


```


----

This website is a replication package for the paper "Exposure to Asylum Seekers and Changing Support for the Radical Right: A Natural Experiment in the Netherlands" by @Tolsma2020. It contains R code to replicate all Tables in the manuscript. 

Use the top menu to navigate to the section of interest. The section replicates **the additional analysis requested by anonymous reviewers** of PLOS ONE. 

To copy the code click the button in the upper right corner of the code-chunks. 


----

## Data
All data and scripts can be found on [Github](https://github.com/JochemTolsma/ExposureASC2020)

----

## Contact
Questions can be addressed to the first author of the corresponding article, [Jochem Tolsma](mailto:j.tolsma@ru.nl). 

----  

## additional dataprep  

We start with a datafile in long format we obtained after performing our dataprep, see [here](data/evazc v22122017.dta).  

- We delete observations of respondents where respondents were not allowed to vote or did not give an answer.  
- We delete observations with missing values on zipcode information.  
- We delete respondents with only one observation.  
- We construct the dichotomous dependent variable.  
- We construct the multinomial dependent variable. 
- We decided to perform additional robustness checks and needed to match more raw data on crisis ASC. 



```{r, results='hide'}
rm(list=ls())

library(haven)

dataset <- read_stata("data/evazc v22122017.dta")

#dependent variable.
#delete not allowed to vote
table(dataset$vote, useNA = "always")
sum(table(dataset$vote, useNA = "always"))
dataset <- dataset[dataset$vote!=16,]
dataset <- dataset[dataset$vote!=17,]
#add 'VNL' to other party
dataset$vote[dataset$vote==12] <- 18
#"1"="vvd", "2"="pvda", "3"="pvv", "4"="cda", "5"="sp"
#"6"="d66", "7"="gl", "8"="cu", "9"="sgp", "10"="dier"
#"11"="50plus", "12"="vnl","13="blanco","14"="dontknow","15="no vote", "18"="other"
#define dichotomous dependent variable
dataset$y_pvv <- ifelse(dataset$vote==3, 1, 0)
#define multinomial dependent variable
dataset$vote_rwsp <- NA
dataset$vote_rwsp[dataset$vote==2 | dataset$vote==6 | dataset$vote==7 | dataset$vote==8 | dataset$vote==10 | dataset$vote==11 | dataset$vote==12 | dataset$vote==18] <- 0 #other
dataset$vote_rwsp[dataset$vote==1 | dataset$vote==4 | dataset$vote==9] <- 1 # right-wing
dataset$vote_rwsp[dataset$vote==5] <- 2 # anti-establishment 
dataset$vote_rwsp[dataset$vote==13 | dataset$vote==14 | dataset$vote==15] <- 3 #demobilized
dataset$vote_rwsp[dataset$vote==3] <- 4
# 1: right-wing; 2: anti-establishment; 3: demobilized; 0: other; 4: PVV

#delete respondents with missing data on zipcode
sum(is.na(dataset$pc4))
dataset <- dataset[!is.na(dataset$pc4),]

#delete respondents with only one observation.
dataset$one <- 1 
test <- aggregate(dataset$one, by=list(dataset$PanelistIdQuestion), FUN=sum)
names(test) <- c("PanelistIdQuestion", "ncases")
dataset <- merge(dataset, test)
table(dataset$ncases)
dataset <- dataset[dataset$ncases!=1,]

#recode tijd/time variable
table(dataset$tijd, useNA = "always")
dataset$tijd <- dataset$tijd - 1

#capacity of ASC
#s1 is regular, s2=temporary, s3=crisis, s123=total
dataset$s1pc4 <- ifelse(dataset$tijd==0, dataset$s1cap_pc4t1rel,dataset$s1cap_pc4t2rel)
dataset$s2pc4 <- ifelse(dataset$tijd==0, dataset$s2cap_pc4t1rel,dataset$s2cap_pc4t2rel)
dataset$s3pc4 <- ifelse(dataset$tijd==0, dataset$s3cap_pc4t1rel,dataset$s3cap_pc4t2rel)
dataset$s123pc4 <- dataset$s1pc4 + dataset$s2pc4 + dataset$s3pc4

#compute variables for hybrid model: within individual means (between vars) and deviations from mean (within vars). 
test <- aggregate(dataset[,c("contactnw", "threat", "s123pc4", "s1pc4", "s2pc4", "s3pc4", "y_pvv", "vote_rwsp" )], by=list(dataset$PanelistIdQuestion), FUN=mean)
names(test) <- c("PanelistIdQuestion", "contactnw_mean", "threat_mean",    "s123pc4_mean" ,  "s1pc4_mean" ,    "s2pc4_mean" ,    "s3pc4_mean" ,    "y_pvv_mean", "vote_rwsp_mean")
dataset <- merge(dataset, test)
dataset$contactnw_afw = dataset$contactnw - dataset$contactnw_mean
dataset$threat_afw = dataset$threat - dataset$threat_mean
dataset$s123pc4_afw = dataset$s123pc4 - dataset$s123pc4_mean
dataset$s1pc4_afw = dataset$s1pc4 - dataset$s1pc4_mean
dataset$s2pc4_afw = dataset$s2pc4 - dataset$s2pc4_mean
dataset$s3pc4_afw = dataset$s3pc4 - dataset$s3pc4_mean

#create filter vars for analyses: fe is fixed effects, fem is fixed effects multinomial
dataset$sel_fe = (dataset$y_pvv != dataset$y_pvv_mean)
dataset$sel_fem = (dataset$vote_rwsp != dataset$vote_rwsp_mean)
dataset$sel_s123pc4 = (dataset$s123pc4 != dataset$s123pc4_mean)

#match additional data on crisis ASC
#these data have been added in a later phase 
duur <- read.csv2("data/Adressen alle AZCs_17022017.csv")
names(duur)
duur <- duur[,c("PC4", "Soort", "Cap_Gem", "Duur.tot.4.11")]
names(duur) <- c("pc4", "soort", "cap", "duur")
duur <- duur[duur$soort==3,]
sort(unique(duur$pc4[duur$cap>0]))

#we are multiplying length of stay with number of AS
duur$s3_altop <- duur$duur * duur$cap
duur2 <- aggregate(duur[,c("cap", "duur", "s3_altop")], by=list(duur$pc4), FUN=sum)
duur2
names(duur2)[1] <- c("pc4")

dataset <- merge(dataset, duur2, all.x=T)
dataset$duur[is.na(dataset$duur)] <- 0
dataset$s3_altop[is.na(dataset$s3_altop)] <- 0
dataset$cap[is.na(dataset$cap)] <- 0

#asylum seekers in crisis centers per 1000 inhabitants weighted by length of stay
dataset$s3_altop2 <- 1000 * dataset$s3_altop / (dataset$inw2014_pc4 * dataset$pauto2014_pc4)
dataset$cap2 <- 1000 * dataset$cap / (dataset$inw2014_pc4 * dataset$pauto2014_pc4)
dataset$s3_altop <- 1000 * dataset$s3_altop / dataset$inw2014_pc4
dataset$cap <- 1000 * dataset$cap / dataset$inw2014_pc4


```



---  

## Reviewer#1, comment 1 / Reviewer#2, comment 5 {.tabset .tabset-fade}

> Reviewer#1:  As authors acknowledge, one critical weakness of their data is a plausible self-selection bias because respondents basically voluntarily sign up for the survey. One question related to this is: is there possibility that PVV supporters, after the sudden inflow of asylum seekers, are more motivated to accept the invitation to the survey in the 2nd wave because of, for example, their anger from the inflow? If this is true, then the self-selection bias problem occurred and it could make their results biased toward their findings. So, is there any way to make sure that PVV supporters and non-supporters had the same propensity to sign up for the survey, both in the 1st and the 2nd wave?

In our manuscript we exploit the panel design of our sample and analyze native Dutch respondents who participated in wave 1 *and* wave 2. (In our fixed effects models we further select on respondents who changed voting intention). Following the suggestion of reviewer#1 We investigated the possibility that PVV supporters in wave 1 are more motivated to accept the invitation to the 2nd survey than non-PVV supporters. We would like to point out that if this type of selection occurred our results will be biased **against** our findings, because we are then less likely to observe an increase in PVV support between wave 1 and wave 2. 

> Reviewer#2: 5.	The attrition analysis mentioned on page 9 should be reported in the appendix. 

```{r}
#this is our data in long format, before we select on panel members
data_attrition <- haven::read_dta('data\\evazc attrition v12042017.dta')

table(data_attrition$tijd)

#we check whether respondents of wave1 also participated in wave2
data_attrition$w2_participation <- NA
data_attrition$w2_participation[data_attrition$tijd==1] <- data_attrition$PanelistIdQuestion[data_attrition$tijd==1] %in% data_attrition$PanelistIdQuestion[data_attrition$tijd==2]

#we check whether zipcodes will experience increase in ASC
data_attrition$s1cap_pc4difrel <- data_attrition$s1cap_pc4t2rel - data_attrition$s1cap_pc4t1rel
data_attrition$s2cap_pc4difrel <- data_attrition$s2cap_pc4t2rel - data_attrition$s2cap_pc4t1rel
data_attrition$s3cap_pc4difrel <-  data_attrition$s3cap_pc4t2rel - data_attrition$s3cap_pc4t1rel
data_attrition$s123cap_pc4difrel <-  (data_attrition$s1cap_pc4t2rel + data_attrition$s2cap_pc4t2rel + data_attrition$s3cap_pc4t2rel) - (data_attrition$s1cap_pc4t1rel + data_attrition$s2cap_pc4t1rel + data_attrition$s3cap_pc4t1rel)


data_at_t1 <- data_attrition[data_attrition$tijd==1,]
data_at_t2 <- data_attrition[data_attrition$tijd==2,]

```

### Model 1  

Is support for PVV in wave1 related to participation in wave 2?  

```{r}
m1 <- glm(w2_participation ~ PVV , family=binomial, data=data_at_t1)
summary(m1)
logLik(m1)
```

The results of this test indeed shows that PVV supporters in wave 1 are more likely to participate in wave 2 than non-PVV supporters in wave 1. We hence conclude that we are likely to **underestimate** the positive relationship between an increase in local exposure to asylum seekers and support for the PVV. 

---  

### Model 2  

Perhaps more importantly, we would like to investigate whether respondents of Wave 1 who are going to experience an increase in local experience are more likely to participate in Wave 2. 

```{r}

m2 <- glm(w2_participation ~ s1cap_pc4difrel + s2cap_pc4difrel + s3cap_pc4difrel, family=binomial, data=data_at_t1)
summary(m2)
logLik(m2)

```

The answer is NO. There is no selectivity with respect to our 'treatment', increased exposure to asylum seekers. Not in general, and not among the PVV supporters in wave 1. 


---  

### Model 3 

And in particular if this is the case for PVV supporters in Wave 1. 

```{r}

m3 <- glm(w2_participation ~ s1cap_pc4difrel*PVV + s2cap_pc4difrel*PVV + s3cap_pc4difrel*PVV, family=binomial, data=data_at_t1)
summary(m3)
logLik(m3)

```


## Reviewer#2, comment 2 DID {.tabset .tabset-fade}



We estimate our dichotomous outcome variable with a Linear Probability Model. 
We use "identity" as link function set the variance to "mu(1-mu)" (as in the binomial distribution) and we allow for (possible) overdispersion. We report cluster corrected standard errors, with individuals as clusters.


```{r}
require(sandwich)
require(lmtest)
ev <- dataset


#Because we include ethnic density of NB and SES of NB need as time-constant covariates we have to remove missing values. Similar to our analyses reported in the main text. 

sum(is.na(ev$pnwal2014_pc4))
ev_sel4 <- ev[!is.na(ev$pnwal2014_pc4),]
#lost 90 respondents

ev_sel4 <- ev_sel4[!(ev_sel4$woz2012_pc4==0),]
#lost 22 respondents
ev_sel4 <- ev_sel4[!is.na(ev_sel4$woz2012_pc4),]
#lost 3 respondents

#center variables! 
ev_sel4$age_c <- ev_sel4$age - mean(ev_sel4$age)
ev_sel4$educ_c <- ev_sel4$educ - mean(ev_sel4$educ)
ev_sel4$pnwal2014_pc4_c <- ev_sel4$pnwal2014_pc4 - mean(ev_sel4$pnwal2014_pc4)
ev_sel4$woz2012_pc4_c <- ev_sel4$woz2012_pc4 - mean(ev_sel4$woz2012_pc4)

#divide to help estimation
ev_sel4$woz2012_pc4_c <- ev_sel4$woz2012_pc4_c/100

ev <- ev_sel4

#define treatments!
#for continuous treatment vars we multiple the deviations from mean exposure with 2

#treatment (total - binary)
ev$treatment_did1b <- ifelse((ev$s123pc4_afw>0 & ev$tijd==1) | (ev$s123pc4_afw<0 & ev$tijd==0), 1, 0)

#treatment (crisis - continuous)
ev$treatment_did1c <- 2 * ifelse(ev$tijd==1, ev$s123pc4_afw, -ev$s123pc4_afw)

#treatment (crisis - binary)
ev$treatment_did2b <- ifelse((ev$s3pc4_afw>0 & ev$tijd==1) | (ev$s3pc4_afw<0 & ev$tijd==0), 1, 0)

#treatment (crisis - continuous)
ev$treatment_did2c <- 2 * ifelse(ev$tijd==1, ev$s3pc4_afw, -ev$s3pc4_afw)

```


### treatment 'total exposure' (binary)

```{r}

#summary(ev$woz2012_pc4_c)
did_lm <- lm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

### treatment 'total exposure' (continuous)

```{r}

did_lm <- lm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 4)
```

---  

### treatment 'crisis exposure' (binary)

```{r}

did_lm <- lm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

### treatment 'crisis exposure' (continuous)

```{r}

did_lm <- lm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

#### repeat without covariates


```{r}

did_lm <- lm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c, data=ev) 
#summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  


---  



## DiD all respondents {.tabset .tabset-fade}

We estimated our main models on a sample of respondents who participated in both waves. For the DiD estimator this is not necessary. We thus also estimated the model on the total pool of respondents who participated in wave 1 and/or in wave 2. 


```{r}
require(sandwich)
require(lmtest)

ev <- data_attrition

#define dependent
ev <- ev[ev$vote!=16,]
ev <- ev[ev$vote!=17,]
#add 'VNL' to other party
ev$vote[ev$vote==12] <- 18
#"1"="vvd", "2"="pvda", "3"="pvv", "4"="cda", "5"="sp"
#"6"="d66", "7"="gl", "8"="cu", "9"="sgp", "10"="dier"
#"11"="50plus", "12"="vnl","13="blanco","14"="dontknow","15="no vote", "18"="other"
#define dichotomous dependent variable
ev$y_pvv <- ifelse(ev$vote==3, 1, 0)


#Because we include ethnic density of NB and SES of NB need as time-constant covariates we have to remove missing values. Similar to our analyses reported in the main text. 

sum(is.na(ev$pnwal2014_pc4))
ev_sel4 <- ev[!is.na(ev$pnwal2014_pc4),]
table(ev_sel4$tijd)
#lost 1536 observations

sum(ev$woz2012_pc4==0)
ev_sel4 <- ev_sel4[!(ev_sel4$woz2012_pc4==0),]
#lost 1427 observations

sum(is.na(ev$woz2012_pc4))
ev_sel4 <- ev_sel4[!is.na(ev_sel4$woz2012_pc4),]

#center variables! 
ev_sel4$age_c <- ev_sel4$age - mean(ev_sel4$age)
ev_sel4$educ_c <- ev_sel4$educ - mean(ev_sel4$educ)
ev_sel4$pnwal2014_pc4_c <- ev_sel4$pnwal2014_pc4 - mean(ev_sel4$pnwal2014_pc4)
ev_sel4$woz2012_pc4_c <- ev_sel4$woz2012_pc4 - mean(ev_sel4$woz2012_pc4)

#divide to help estimation
ev_sel4$woz2012_pc4_c <- ev_sel4$woz2012_pc4_c/100

ev <- ev_sel4

#define treatments! 


#treatment (total - binary)
ev$treatment_did1b <- ifelse(ev$s123cap_pc4difrel>0, 1, 0)
table(ev$treatment_did1b)
#treatment (crisis - continuous)
ev$treatment_did1c <- ev$s123cap_pc4difrel
summary(ev$treatment_did1c)

#treatment (crisis - binary)
ev$treatment_did2b <- ifelse(ev$s3cap_pc4difrel>0, 1, 0)
table(ev$treatment_did2b)

#treatment (crisis - continuous)
ev$treatment_did2c <- ev$s3cap_pc4difrel
summary(ev$treatment_did2c)

```


### treatment 'total exposure' (binary)

```{r}

did_lm <- lm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  
#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

### treatment 'total exposure' (continuous)

```{r}

did_lm <- lm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),1)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did1c + tijd + tijd:treatment_did1c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 4)
```

---  

### treatment 'crisis exposure' (binary)

```{r}

did_lm <- lm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

This one is interesting. Respondents who will experience an increase in exposure of asylum seekers due to the opening of a crisis ASC are more likely to support PVV at wave 1 (taking into account the control variables!!). The time trend in increasing support for PVV is weaker for this group, i.e. a negative treatment effect. This shows our treatment of crisis ASC was not random. Please note that our dependent is binary and thus voters who already supported PVV in wave1 cannot increase support further, a ceiling effect. A better design would be to investigate voters who changed support in PVV during wave 1 and wave 2 and whether this is related to an increase in exposure. This is exactly what we do in the main manuscript.   
---  

#### repeat without covariates

```{r}

did_lm <- lm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2b + tijd + tijd:treatment_did2b, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

### treatment 'crisis exposure' (continuous)

```{r}

did_lm <- lm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

#summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

#### repeat without covariates


```{r}

did_lm <- lm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c, data=ev) 
summary(did_lm)
#round(coeftest(did_lm, vcov = vcovCL(did_lm, cluster = ~ PanelistIdQuestion)), 3)
#coef(did_lm)

#did_lpm <- glm(y_pvv ~ treatment_did1b + tijd + tijd:treatment_did1b + gender + age_c + educ_c + pnwal2014_pc4_c + woz2012_pc4_c, family=binomial(link="identity"), data=ev, start=round(coef(did_lm),2))
#summary(did_lpm)
#round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)

did_lpm_het <- glm(y_pvv ~ treatment_did2c + tijd + tijd:treatment_did2c, family=quasi(link="identity", variance = "mu(1-mu)"), data=ev,  start=round(coef(did_lm),2)) 

summary(did_lpm_het)
round(coeftest(did_lpm_het, vcov = vcovCL(did_lpm_het, cluster = ~ PanelistIdQuestion)), 3)
```

---  

## Reviewer#2, comment 7

> Also, are sample weights applied? 

Let us construct sample weights for the fixed effects sample. Show descriptive statistics pre- and post-weighting. 

```{r, results= 'hold'}
require(anesrake)
ev_sel <- dataset[dataset$sel_fe==1,]
ev_sel2 <- ev_sel[ev_sel$tijd==1,]

#need to multiply _afw with 2 (thus becomes t2-t1 (First difference design), instead of t2 - mean(t2,t1) (fixed effects design)
ev_sel2$s123pc4_afw <- 2*ev_sel2$s123pc4_afw
ev_sel2$s1pc4_afw <- 2*ev_sel2$s1pc4_afw
ev_sel2$s2pc4_afw <- 2*ev_sel2$s2pc4_afw
ev_sel2$s3pc4_afw <- 2*ev_sel2$s3pc4_afw
ev_sel2$threat_afw <- 2*ev_sel2$threat_afw
ev_sel2$contactnw_afw <- 2*ev_sel2$contactnw_afw


#ADD WEIGHTS TO Data
#make caseidn
ev_sel2$caseidn <- 1:length(ev_sel2[,1])

N <- length(ev_sel2[,1])

#MAKE TARGET VALUES
#Geslacht
gender_w <- c(0.503,0.497) # vrouw - man

#Age: 3cats
age_w <- c(0.238,0.344,0.418) #18-35,35-55,55+
names(age_w) <- c("age1", "age2", "age3")

#Opl: 3cats
educ_w <- c(0.323,0.393,0.284) #basis/vmbo/mbo1,mbo2-4/HV/VWO,HBO/WO 
names(educ_w) <- c("opl1", "opl2", "opl3")

targets <- list(gender_w,age_w, educ_w) 
names(targets) <- c("gender_w","age_w", "educ_w") 

#check variables in data
#table(ev_sel2$gender, useNA="always") #man=1
ev_sel2$gender_w <- as.logical(ev_sel2$gender)
#table(ev_sel2$gender_w, useNA="always")

#age: 3cats
#table(ev_sel2$age, useNA="always") #18-35,35-55,55+
ev_sel2$age_w <- NA
ev_sel2$age_w[ev_sel2$age<=35] <- 1
ev_sel2$age_w[ev_sel2$age>35 & ev_sel2$age<=55] <- 2
ev_sel2$age_w[ev_sel2$age>55] <- 3 
ev_sel2$age_w <- as.factor(ev_sel2$age_w)
levels(ev_sel2$age_w) <- c("age1", "age2", "age3")
#table(ev_sel2$age_w, useNA="always")

#Opl: 3cats
#table(ev_sel2$educ, useNA="always") 
ev_sel2$educ_w <- NA
ev_sel2$educ_w[ev_sel2$educ<=8] <- 1
ev_sel2$educ_w[ev_sel2$educ> 8 & ev_sel2$educ<=12] <- 2
ev_sel2$educ_w[ev_sel2$educ>12] <- 3
ev_sel2$educ_w <-  as.factor(ev_sel2$educ_w)
levels(ev_sel2$educ_w) <- c("opl1", "opl2", "opl3")
#table(ev_sel2$educ_w, useNA="always") 

# Education (years of education that constitute the shortest route to obtain a university degree. (After this coding, all values are subtracted from the maximum years of schooling necessary to obtain a university grade))
#(opl1) 5 lagere school not finished (4yrs) /lagere school (6yrs) 
#(opl1) 7 lbo, vmbo-kb/bbl (6,5yrs) /mavo, vmbo-tl (8yrs) 
#(opl2) 11 havo (10yrs) / vwo/gymnasium (12yrs)
#(opl2) 9,5 mbo-kort (kmbo) (8,5yrs) /mbo-tussen/lang (mbo) (10,5yrs) 
#(opl3) 14 hbo (14yrs) 
#(opl3) 16,5 universiteit (bachelormaster, doctoraal)(16,5)

#make weights 
weighted <- anesrake(inputter=targets, dataframe=ev_sel2, choosemethod="total",caseid=ev_sel2$caseidn,cap = 3, pctlim=5, verbose=FALSE)
test <- weightassess(targets, ev_sel2, weighted$weightvec)
test

# table(ev_sel2$educ)
# oplp <- test$educ_w[c(1:3),1]*N
# oplw <- test$educ_w[c(1:3),4]
# opls <- table(ev_sel2$educ_w)
# test2 <- matrix(c(oplp, oplw, opls), byrow=T, nrow=3)
# dimnames(test2) <- list(weightype=c("population","weighted sample", "original sample"),opl=c("low","medium","high"))
# test2
# chisq.test(test2[1:2,])
# 
# agep <- test$age_w[c(1:3),1]*N
# agew <- test$age_w[c(1:3),4]
# test2 <- matrix(c(agep, agew), byrow=T, nrow=2)
# dimnames(test2) <- list(weightype=c("p","w"),age=c("1","2","3"))
# test2
# chisq.test(test2)
# 
# geslp <- test$gender_w[c(1:2),1]*N
# geslw <- test$gender_w[c(1:2),4]
# test2 <- matrix(c(geslp, geslw), byrow=T, nrow=2)
# dimnames(test2) <- list(weightype=c("p","w"),age=c("v","m"))
# test2
# chisq.test(test2)

ev_sel2 <- cbind(ev_sel2, weighted$weightvec)
names(ev_sel2)[names(ev_sel2)=="weighted$weightvec"] <- "weightvec3"

```

And let us perform a robustness check on the weighted sample. 

```{r}
require(survey)

# check if weighing gives correct mean
# des2 <- svydesign(id = ~1,  weights = ~weightvec3, data = ev_sel2)
# svymean(~gender, des2)
# yes it does. 

glm.sampling.weights1 <- svyglm(y_pvv ~ s123pc4_afw , family = quasibinomial(), design=des2)
glm.sampling.weights2 <- svyglm(y_pvv ~ s1pc4_afw + s2pc4_afw + s3pc4_afw , family = quasibinomial(), design=des2)
glm.sampling.weights3 <- svyglm(y_pvv ~ s1pc4_afw + s2pc4_afw + s3pc4_afw + contactnw_afw + threat_afw, family = quasibinomial(), design=des2)

summary(glm.sampling.weights3)



```

